import pandas as pd
import openpyxl  # Import openpyxl library for Excel files
import matplotlib.pyplot as plt

# Install openpyxl library if not already installed (uncomment if needed)
# !pip install openpyxl

# Load the XLSX data (assuming the sheet name is 'netflix_df')
try:
    netflix_df = pd.read_excel("netflix_data.xlsx", sheet_name="netflix_df")
except FileNotFoundError:
    print("Error: File 'netflix_data.xlsx' not found. Please check the filename and location.")
    exit()  # Exit the program if the file is not found

# Filter for movies only
netflix_movies = netflix_df[netflix_df['type'] == "Movie"][
    ['title', 'country', 'genre', 'release_year', 'duration']
]

# Check data type of 'duration' column (optional)
print(netflix_movies['duration'].dtype)  # This line is for checking the data type

# Handle potential data type issues:
#   - If 'duration' is already numeric, no conversion is needed.
#   - If 'duration' contains non-numeric values (e.g., errors), handle them appropriately (e.g., remove rows, replace with NaN).
#   - If 'duration' is a string with mixed formats (e.g., some with 'min', some without), consider using regular expressions for more robust cleaning.

# Assuming 'duration' might contain non-numeric values (adapt based on your data):
#   - Try converting to numeric, ignoring errors (potential for data loss)
netflix_movies['duration'] = pd.to_numeric(netflix_movies['duration'], errors='coerce')

# Handle potential NaN values (if applicable):
#   - You can choose to remove rows with NaN values (dropna()) or fill them with a value (fillna())
netflix_movies.dropna(subset=['duration'], inplace=True)  # Remove rows with NaN in 'duration' (optional)

# Convert 'duration' to string before using .str accessor
netflix_movies['duration'] = netflix_movies['duration'].astype(str)

# Assuming 'duration' is now (mostly) string with 'min':
netflix_movies['duration'] = netflix_movies['duration'].str.replace(' min', '', regex=True).astype(int)

# Initialize an empty list to store color codes
colors = []

# Use a for loop to iterate through each row in netflix_movies
for index, row in netflix_movies.iterrows():
    genre = row['genre'].lower()  # Convert genre to lowercase for case-insensitive matching
    if genre == "children":
        colors.append("skyblue")
    elif genre == "documentaries":
        colors.append("green")
    elif genre == "stand-up":
        colors.append("orange")
    else:
        colors.append("gray")  # All other genres

# Create a matplotlib figure
fig, ax = plt.subplots()

# Create a scatter plot with colors based on genre
ax.scatter(netflix_movies['release_year'], netflix_movies['duration'], c=colors)

# Set labels and title for the plot
ax.set_xlabel("Release Year")
ax.set_ylabel("Duration (min)")
ax.set_title("Movie Duration by Year of Release")

# Visual inspection to determine the answer
# Examine the scatter plot to see if there's a clear downward trend (movies getting shorter).
# Assign "yes" or "no" to the variable answer based on your observation.

answer = "no"  # Replace with "yes" if the plot suggests a clear downward trend

# Display the plot (optional)
plt.show()

print(f"Are movies getting shorter? {answer}")
